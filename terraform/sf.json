{
  "Comment": "Step function that controls json pipeline execution",
  "StartAt": "ProcessObjects",
  "States": {
    "ProcessObjects": {
      "Type": "Map",
      "ItemReader": {
        "ReaderConfig": {
          "InputType": "MANIFEST"
        },
        "Resource": "arn:aws:states:::s3:getObject",
        "Parameters": {
          "Bucket": "${input_bucket}",
          "Key": "inventory/${input_bucket}/${inventory_name}/${manifest_date}/manifest.json"
        }
      },
      "ItemProcessor": {
        "ProcessorConfig": {
          "Mode": "DISTRIBUTED",
          "ExecutionType": "STANDARD"
        },
        "StartAt": "GenerateJson",
        "States": {
          "GenerateJson": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "Parameters": {
              "FunctionName": "${generator_arn}"
            },
            "Next": "CompareJson"
          },
          "CompareJson": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "Parameters": {
              "FunctionName": "${comparator_arn}"
            },
            "Next": "WriteS3"
          },
          "WriteS3": {
            "Type": "Task",
            "Resource": "arn:aws:states:::aws-sdk:s3:putObject",
            "Parameters": {
              "Bucket": "${result_bucket}",
              "Key.$": "$.filename",
              "Body.$": "$.Payload"
            },
            "End": true
          }
        }
      },
      "MaxConcurrency": 10,
      "ItemBatcher": {
        "MaxItemsPerBatch": 1
      },
      "End": true
    }
  }
}
